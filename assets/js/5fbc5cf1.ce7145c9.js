"use strict";(self.webpackChunkhoogii_frontend=self.webpackChunkhoogii_frontend||[]).push([[207],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(n),u=a,h=c["".concat(s,".").concat(u)]||c[u]||m[u]||r;return n?i.createElement(h,l(l({ref:t},p),{},{components:n})):i.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var d=2;d<r;d++)l[d]=n[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=n(7462),a=(n(7294),n(3905));const r={title:"Chia Provider API"},l=void 0,o={unversionedId:"api",id:"api",title:"Chia Provider API",description:"Hoogii injects an API access point in the websites accessed by users at window.chia.hoogii.",source:"@site/docs/api.md",sourceDirName:".",slug:"/api",permalink:"/docs/api",draft:!1,tags:[],version:"current",frontMatter:{title:"Chia Provider API"},sidebar:"developerSidebar",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"Developer Demo",permalink:"/docs/demo"}},s={},d=[{value:"General Usage",id:"general-usage",level:2},{value:"Version",id:"version",level:2},{value:"Properties",id:"properties",level:2},{value:"chia.hoogii.isHoogii",id:"chiahoogiiishoogii",level:3},{value:"Value",id:"value",level:4},{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"chia.hoogii.name",id:"chiahoogiiname",level:3},{value:"Value",id:"value-1",level:4},{value:"Description",id:"description-1",level:4},{value:"chia.hoogii.version",id:"chiahoogiiversion",level:3},{value:"Description",id:"description-2",level:4},{value:"chia.hoogii.apiVersion",id:"chiahoogiiapiversion",level:3},{value:"Value",id:"value-2",level:4},{value:"Description",id:"description-3",level:4},{value:"Methods",id:"methods",level:2},{value:"chia.hoogii.isConnected()",id:"chiahoogiiisconnected",level:3},{value:"Definition",id:"definition",level:4},{value:"Description",id:"description-4",level:4},{value:"chia.hoogii.isUnlocked()",id:"chiahoogiiisunlocked",level:3},{value:"Definition",id:"definition-1",level:4},{value:"Description",id:"description-5",level:4},{value:"chia.hoogii.on()",id:"chiahoogiion",level:3},{value:"Definition",id:"definition-2",level:4},{value:"Description",id:"description-6",level:4},{value:"chia.hoogii.request()",id:"chiahoogiirequest",level:3},{value:"Definition",id:"definition-3",level:4},{value:"Description",id:"description-7",level:4},{value:"Events",id:"events",level:2},{value:"<code>chainChanged</code>",id:"chainchanged",level:3},{value:"Description",id:"description-8",level:4},{value:"Example",id:"example-1",level:4},{value:"<code>accountChanged</code>",id:"accountchanged",level:3},{value:"Description",id:"description-9",level:4},{value:"Example",id:"example-2",level:4},{value:"Wallet RPC API",id:"wallet-rpc-api",level:2},{value:"<code>connect</code>",id:"connect",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Description",id:"description-10",level:4},{value:"Example",id:"example-3",level:4},{value:"<code>chainId</code>",id:"chainid",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Description",id:"description-11",level:4},{value:"Example",id:"example-4",level:4},{value:"<code>walletSwitchChain</code>",id:"walletswitchchain",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Description",id:"description-12",level:4},{value:"Example",id:"example-5",level:4},{value:"<code>accounts</code>",id:"accounts",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Description",id:"description-13",level:4},{value:"Example",id:"example-6",level:4},{value:"<code>transfer</code>",id:"transfer",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Description",id:"description-14",level:4},{value:"Example",id:"example-7",level:4},{value:"<code>createOffer</code>",id:"createoffer",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Description",id:"description-15",level:4},{value:"Example",id:"example-8",level:4},{value:"<code>takeOffer</code>",id:"takeoffer",level:3},{value:"<code>sendTransaction</code>",id:"sendtransaction",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Description",id:"description-16",level:4},{value:"Example",id:"example-9",level:4},{value:"<code>getPublicKeys</code>",id:"getpublickeys",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Description",id:"description-17",level:4},{value:"Example",id:"example-10",level:4},{value:"<code>getAssetBalance</code>",id:"getassetbalance",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Description",id:"description-18",level:4},{value:"Example",id:"example-11",level:4},{value:"<code>filterUnlockedCoins</code>",id:"filterunlockedcoins",level:3},{value:"<code>getAssetCoins</code>",id:"getassetcoins",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Description",id:"description-19",level:4},{value:"Example",id:"example-12",level:4},{value:"<code>signCoinSpends</code>",id:"signcoinspends",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Description",id:"description-20",level:4},{value:"Example",id:"example-13",level:4},{value:"<code>signMessage</code>",id:"signmessage",level:3},{value:"Errors",id:"errors",level:2},{value:"<code>InvalidParamsError</code>",id:"invalidparamserror",level:3},{value:"Definition",id:"definition-4",level:4},{value:"<code>UnauthorizedError</code>",id:"unauthorizederror",level:3},{value:"Definition",id:"definition-5",level:4},{value:"<code>UserRejectedRequestError</code>",id:"userrejectedrequesterror",level:3},{value:"Definition",id:"definition-6",level:4},{value:"<code>SpendableBalanceExceededError</code>",id:"spendablebalanceexceedederror",level:3},{value:"Definition",id:"definition-7",level:4},{value:"<code>MethodNotFoundError</code>",id:"methodnotfounderror",level:3},{value:"Definition",id:"definition-8",level:4},{value:"<code>NoSecretKeyError</code>",id:"nosecretkeyerror",level:3},{value:"Definition",id:"definition-9",level:4},{value:"<code>LimitExceedError</code>",id:"limitexceederror",level:3},{value:"Definition",id:"definition-10",level:4},{value:"<code>UnderDevelopment</code>",id:"underdevelopment",level:3},{value:"Definition",id:"definition-11",level:4}],p={toc:d};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Hoogii injects an API access point in the websites accessed by users at ",(0,a.kt)("inlineCode",{parentName:"p"},"window.chia.hoogii"),".\nUltimately it aims to not only provide methods as defined in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Chia-Network/chips/blob/main/CHIPs/chip-0002.md"},"Chia Improvement Proposal (CHIP) 0002 - dApp protocol"),", but also extended methods that allow dApp developers to get away from the necessity to deploy their own Chia Blockchain full nodes."),(0,a.kt)("h2",{id:"general-usage"},"General Usage"),(0,a.kt)("p",null,"For a complete end-to-end use case (e.g., Chia dApp web application), you will have to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Detect Chia provider (i.e., ",(0,a.kt)("inlineCode",{parentName:"li"},"window.chia.hoogii"),") and connect."),(0,a.kt)("li",{parentName:"ul"},"Detect which Chia blockchain the user is connected to (e.g., the main Chia Network ",(0,a.kt)("inlineCode",{parentName:"li"},"mainnet")," and current Chia Test Network ",(0,a.kt)("inlineCode",{parentName:"li"},"testnet10"),")."),(0,a.kt)("li",{parentName:"ul"},"Get user's Chia accounts.")),(0,a.kt)("p",null,"Followed by these initial steps, you are then able to call other methods as detailed below to read from and write to the blockchain on user's behalf, and obtain off-chain information such as user signature on specific messages."),(0,a.kt)("p",null,"Below for brevity, we refer to ",(0,a.kt)("inlineCode",{parentName:"p"},"window.chia")," object with ",(0,a.kt)("inlineCode",{parentName:"p"},"chia"),", and all documented methods are reachable under ",(0,a.kt)("inlineCode",{parentName:"p"},"window.chia.*"),"."),(0,a.kt)("h2",{id:"version"},"Version"),(0,a.kt)("p",null,"The Chia provider API defined here is of version 1.0.0."),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"chiahoogiiishoogii"},"chia.hoogii.isHoogii"),(0,a.kt)("h4",{id:"value"},"Value"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"true")," if Hoogii Wallet is installed."),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"Note that non-Hoogii wallets can also set this property to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("admonition",{title:"EXTENDED IMPLEMENTATION",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This property is not defined in Chia provider API 1.0.0.")),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"if (window.chia.hoogii && window.chia.hoogii.isHoogii) {\n  console.log('Hoogii is installed!');\n}\n")),(0,a.kt)("h3",{id:"chiahoogiiname"},"chia.hoogii.name"),(0,a.kt)("h4",{id:"value-1"},"Value"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"'Hoogii'")," if Hoogii Wallet is installed."),(0,a.kt)("h4",{id:"description-1"},"Description"),(0,a.kt)("p",null,"Wallet name."),(0,a.kt)("h3",{id:"chiahoogiiversion"},"chia.hoogii.version"),(0,a.kt)("h4",{id:"description-2"},"Description"),(0,a.kt)("p",null,"The wallet version.\nCheck ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/hashgreen/hoogii-wallet/releases"},"GitHub Releases")," for the exact version string."),(0,a.kt)("h3",{id:"chiahoogiiapiversion"},"chia.hoogii.apiVersion"),(0,a.kt)("h4",{id:"value-2"},"Value"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"'1.0.0'")," for the methods described here."),(0,a.kt)("h4",{id:"description-3"},"Description"),(0,a.kt)("p",null,"The API version adopted by the wallet."),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"chiahoogiiisconnected"},"chia.hoogii.isConnected()"),(0,a.kt)("h4",{id:"definition"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"window.chia.hoogii.isConnected(): Promise<boolean>;\n")),(0,a.kt)("h4",{id:"description-4"},"Description"),(0,a.kt)("p",null,"Returns a diagnostic message object if the provider is connected."),(0,a.kt)("admonition",{title:"EXTENDED IMPLEMENTATION",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This property is not defined in Chia provider API 1.0.0.")),(0,a.kt)("h3",{id:"chiahoogiiisunlocked"},"chia.hoogii.isUnlocked()"),(0,a.kt)("h4",{id:"definition-1"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"window.chia.hoogii.isUnlocked(): Promise<boolean>;\n")),(0,a.kt)("h4",{id:"description-5"},"Description"),(0,a.kt)("p",null,"Returns a diagnostic message object if the provider is unlocked."),(0,a.kt)("admonition",{title:"EXTENDED IMPLEMENTATION",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This property is not defined in Chia provider API 1.0.0.")),(0,a.kt)("h3",{id:"chiahoogiion"},"chia.hoogii.on()"),(0,a.kt)("h4",{id:"definition-2"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"window.chia.hoogii.on(event: string, params?: any): void;\n")),(0,a.kt)("h4",{id:"description-6"},"Description"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"chia.hoogii.on")," to register event callbacks.\nSee ",(0,a.kt)("a",{parentName:"p",href:"#events"},"Events")," documentation for details."),(0,a.kt)("h3",{id:"chiahoogiirequest"},"chia.hoogii.request()"),(0,a.kt)("h4",{id:"definition-3"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"interface RequestArguments {\n  method: string;\n  params?: object;\n}\n\nwindow.chia.hoogii.request(args: RequestArguments): Promise<any>;\n")),(0,a.kt)("h4",{id:"description-7"},"Description"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"chia.hoogii.request")," to submit wallet RPC requests to the Chia Blockchain via Hoogii\nThe returned value is a ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise")," which resolves to the result of the call.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"params")," and return values will vary by each different call as listed below."),(0,a.kt)("p",null,"If the RPC call fails for some reason, ",(0,a.kt)("a",{parentName:"p",href:"#errors"},(0,a.kt)("inlineCode",{parentName:"a"},"Error")),"s will be raised."),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"#wallet-rpc-api"},"Wallet RPC API")," documentation for details."),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)("h3",{id:"chainchanged"},(0,a.kt)("inlineCode",{parentName:"h3"},"chainChanged")),(0,a.kt)("h4",{id:"description-8"},"Description"),(0,a.kt)("p",null,"The event will be emitted when a new chain is connected."),(0,a.kt)("h4",{id:"example-1"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"window.chia.hoogii.on('chainChanged', listener: ({ chainId: string }) => void);\n")),(0,a.kt)("h3",{id:"accountchanged"},(0,a.kt)("inlineCode",{parentName:"h3"},"accountChanged")),(0,a.kt)("h4",{id:"description-9"},"Description"),(0,a.kt)("p",null,"The event will be emitted when the user selects a new account, typically when user chooses an alternative ",(0,a.kt)("em",{parentName:"p"},"public wallet key"),".\nWhen you receive this event, you should call ",(0,a.kt)("a",{parentName:"p",href:"#accounts"},(0,a.kt)("inlineCode",{parentName:"a"},"accounts"))," to retrieve the latest account information."),(0,a.kt)("admonition",{title:"NOT IMPLEMENTED",type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"This event trigger is not currently implemented and ",(0,a.kt)("a",{parentName:"p",href:"#underdevelopment"},(0,a.kt)("inlineCode",{parentName:"a"},"UnderDevelopment"))," will be raised.")),(0,a.kt)("h4",{id:"example-2"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"window.chia.hoogii.on('accountChanged', listener: () => void);\n")),(0,a.kt)("h2",{id:"wallet-rpc-api"},"Wallet RPC API"),(0,a.kt)("p",null,"All wallet RPCs are made by requesting the endpoint ",(0,a.kt)("a",{parentName:"p",href:"#chiarequest"},(0,a.kt)("inlineCode",{parentName:"a"},"chia.hoogii.request()")),".\nNote that this wallet RPC is not the same as ",(0,a.kt)("a",{parentName:"p",href:"https://docs.chia.net/wallet-rpc"},"Chia Wallet RPC API")," from the official wallet."),(0,a.kt)("h3",{id:"connect"},(0,a.kt)("inlineCode",{parentName:"h3"},"connect")),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,"No parameters are required."),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"boolean"),": whether the connection is successful."),(0,a.kt)("h4",{id:"description-10"},"Description"),(0,a.kt)("p",null,"The application requests permission from the user to connect to Hoogii.\nNote when the user rejects the request, an error ",(0,a.kt)("a",{parentName:"p",href:"#userrejectedrequesterror"},(0,a.kt)("inlineCode",{parentName:"a"},"UserRejectedRequestError"))," will be raised."),(0,a.kt)("h4",{id:"example-3"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const connected: boolean = await window.chia.hoogii.request({ method: 'connect' });\nconsole.log(connected);\n")),(0,a.kt)("h3",{id:"chainid"},(0,a.kt)("inlineCode",{parentName:"h3"},"chainId")),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("p",null,"No parameters are required."),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string"),": the current chain ID."),(0,a.kt)("h4",{id:"description-11"},"Description"),(0,a.kt)("p",null,"The available chain are:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"ID"),(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Network"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"0x01"),(0,a.kt)("td",{parentName:"tr",align:null},"mainnet"),(0,a.kt)("td",{parentName:"tr",align:null},"Chia main network")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"0x02"),(0,a.kt)("td",{parentName:"tr",align:null},"testnet10"),(0,a.kt)("td",{parentName:"tr",align:null},"Chia test network #10")))),(0,a.kt)("p",null,"Please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://devs.chia.net/guides/chialisp-testnet-setup/"},"Chia Testnet Setup")," to understand about the test network."),(0,a.kt)("admonition",{title:"ALTERNATIVE IMPLEMENTATION",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This RPC endpoint is implemented differently from the Chia provider API 1.0.0.\nHoogii reports the ID (i.e., ",(0,a.kt)("inlineCode",{parentName:"p"},"0x01")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"0x02"),") rather than the name of the networks.")),(0,a.kt)("h4",{id:"example-4"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const chainId: string = await window.chia.hoogii.request({ method: 'chainId' });\nconsole.log(chainId);\n")),(0,a.kt)("h3",{id:"walletswitchchain"},(0,a.kt)("inlineCode",{parentName:"h3"},"walletSwitchChain")),(0,a.kt)("h4",{id:"parameters-2"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"chainId"),": a ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),". The ID of the chain to switch to."),(0,a.kt)("h4",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"null"),": no return value is provided upon success."),(0,a.kt)("h4",{id:"description-12"},"Description"),(0,a.kt)("p",null,"The application requests to switch the connected network to another one."),(0,a.kt)("admonition",{title:"ALTERNATIVE IMPLEMENTATION",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This RPC endpoint is implemented differently from the Chia provider API 1.0.0.\nHoogii accepts the ID (i.e., ",(0,a.kt)("inlineCode",{parentName:"p"},"0x01")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"0x02"),") as the argument ",(0,a.kt)("inlineCode",{parentName:"p"},"chainID")," rather than the name of the networks.")),(0,a.kt)("h4",{id:"example-5"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const params = { chainId: '0x01' };\nawait window.chia.hoogii.request({ method: 'walletSwitchChain', params });\n")),(0,a.kt)("h3",{id:"accounts"},(0,a.kt)("inlineCode",{parentName:"h3"},"accounts")),(0,a.kt)("h4",{id:"parameters-3"},"Parameters"),(0,a.kt)("p",null,"No parameters are required."),(0,a.kt)("h4",{id:"returns-3"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string[]"),": the currently selected accounts."),(0,a.kt)("h4",{id:"description-13"},"Description"),(0,a.kt)("p",null,"A wallet can hold many different accounts, and this endpoint returns the currently used accounts."),(0,a.kt)("admonition",{title:"EXTENDED IMPLEMENTATION",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This method is not defined in Chia provider API 1.0.0.")),(0,a.kt)("h4",{id:"example-6"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const accounts: string[] = await window.chia.hoogii.request({ method: 'accounts' });\nconsole.log(accounts);\n")),(0,a.kt)("h3",{id:"transfer"},(0,a.kt)("inlineCode",{parentName:"h3"},"transfer")),(0,a.kt)("h4",{id:"parameters-4"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"to"),": A string. The recipient's Chia address.  "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"amount"),": An integer. The amount of Chia being transferred, measured in mojo (the smallest unit of Chia, equivalent to ",(0,a.kt)("inlineCode",{parentName:"li"},"10^-12")," XCH).  "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"memos"),": An optional list of string. Memos associated with the transfer. Each memo is a hex string that can be used to attach additional data to the transfer.  "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"assetId"),": An optional string. The ID of the asset being transferred, if the transfer involves an asset other than XCH. This field is optional and can be left out for XCH transfers.  ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"interface TransferParams {\n  to: string;  // bech32m encoded address\n  amount: number;\n  memos?: string[];\n  assetId?: string;\n}\n")),(0,a.kt)("h4",{id:"returns-4"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"null"),": no return value is provided upon success."),(0,a.kt)("h4",{id:"description-14"},"Description"),(0,a.kt)("p",null,"This API is used for transferring ",(0,a.kt)("inlineCode",{parentName:"p"},"CAT")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"XCH")," to a specified recipient, with the option to attach memos."),(0,a.kt)("admonition",{title:"EXTENDED IMPLEMENTATION",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This method is not defined in Chia provider API 1.0.0.")),(0,a.kt)("h4",{id:"example-7"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const params = {\n  to: 'txch1yw8gm66uzmuzj4ezzk7tmpjk7fzacq8n7tgtdq0zshxj978gp6cq6sm5z8',\n  amount: '1000',\n  // hex string, \"hello chia\".encode(\"utf-8\")\n  memos: ['0x68656c6c6f2063686961'],  \n  assetId:\n    '73dd418ff67e6079f06c7cc8cee637c7adc314210dca26997d634692f6c16087',\n};\nwindow.chia.hoogii.request({ method: 'transfer', params });\n")),(0,a.kt)("h3",{id:"createoffer"},(0,a.kt)("inlineCode",{parentName:"h3"},"createOffer")),(0,a.kt)("h4",{id:"parameters-5"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"requestAssets"),": An array of objects specifying the assets the user is requesting to receive in the trade. Each object includes the ",(0,a.kt)("inlineCode",{parentName:"li"},"assetId")," of the asset and the ",(0,a.kt)("inlineCode",{parentName:"li"},"amount")," requested.    "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"offerAssets"),": An array of objects specifying the assets the user is offering to give in the trade. Each object includes the ",(0,a.kt)("inlineCode",{parentName:"li"},"assetId")," of the asset and the ",(0,a.kt)("inlineCode",{parentName:"li"},"amount")," offered.   ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"interface Asset {\n  assetId?: string;  // 256-bit, 32-bytes, or 64-char hexadecimal string\n  amount: number;\n}\n\ninterface CreateOfferParams {\n  requestAssets: Asset[],\n  offerAssets: Asset[],\n}\n")),(0,a.kt)("h4",{id:"returns-5"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"CreateOfferResult"),": the offer created with fields ",(0,a.kt)("inlineCode",{parentName:"p"},"offer")," to hold the offer string, and ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," to hold the transaction ID of the offer."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"interface CreateOfferResult {\n  offer: string;\n  id: string;\n}\n")),(0,a.kt)("h4",{id:"description-15"},"Description"),(0,a.kt)("p",null,"This API is used for creating a trade offer. Users can specify the assets they are requesting and offering in the trade. The API returns an offer string and a transaction ID for the offer."),(0,a.kt)("admonition",{title:"EXTENDED IMPLEMENTATION",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This method is not defined in Chia provider API 1.0.0.")),(0,a.kt)("h4",{id:"example-8"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const params = {\n  requestAssets: [\n    {\n      assetId: '73dd418ff67e6079f06c7cc8cee637c7adc314210dca26997d634692f6c16087',\n      amount: 100,\n    },\n  ],\n  offerAssets: [\n    {\n      assetId: '',\n      amount: 100,\n    },\n  ],\n};\nconst result = await window.chia.hoogii.request({ method: 'createOffer', params });\n\nconsole.log(result);\n")),(0,a.kt)("h3",{id:"takeoffer"},(0,a.kt)("inlineCode",{parentName:"h3"},"takeOffer")),(0,a.kt)("admonition",{title:"NOT IMPLEMENTED",type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"This RPC endpoint is not currently implemented and ",(0,a.kt)("a",{parentName:"p",href:"#underdevelopment"},(0,a.kt)("inlineCode",{parentName:"a"},"UnderDevelopment"))," will be raised.")),(0,a.kt)("h3",{id:"sendtransaction"},(0,a.kt)("inlineCode",{parentName:"h3"},"sendTransaction")),(0,a.kt)("h4",{id:"parameters-6"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"spendBundle"),": A ",(0,a.kt)("inlineCode",{parentName:"li"},"SpendBundle")," object. Contains ",(0,a.kt)("inlineCode",{parentName:"li"},"coin_spends")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"aggregated_signature"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"interface Coin {\n  amount: number;\n  parent_coin_info: string;\n  puzzle_hash: string;\n}\n\ninterface CoinSpend {\n  coin: Coin;\n  puzzle_reveal: string;  // a hexadecimal string\n  solution: string;  // a hexadecimal string\n}\n\ninterface SpendBundle {\n  coin_spends: CoinSpend[];\n  aggregated_signature: string;  // 768-bit, 96-bytes, or 192-char hexadecimal string \n}\n\ninterface SendTransactionParams {\n  spendBundle: SpendBundle;\n}\n")),(0,a.kt)("h4",{id:"returns-6"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"SendTransactionResult"),": an object with a ",(0,a.kt)("inlineCode",{parentName:"p"},"status")," field to indicate result and ",(0,a.kt)("inlineCode",{parentName:"p"},"error")," to optionally include error message"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"enum MempoolInclusionStatus {\n  SUCCESS = 1;  // Transaction added to mempool\n  PENDING = 2;  // Transaction not yet added to mempool\n  FAILED = 3;  // Transaction was invalid and dropped\n}\n\ninterface TransactionResult {\n  status: MempoolInclusionStatus;\n  error?: string;\n}\n")),(0,a.kt)("h4",{id:"description-16"},"Description"),(0,a.kt)("p",null,"dApps can send signed transaction to the full node via this endpoint."),(0,a.kt)("h4",{id:"example-9"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const params = { spendBundle: ... };\nconst result = await window.chia.hoogii.request({ method: 'sendTransaction', params});\n\nconsole.log(result);\n")),(0,a.kt)("h3",{id:"getpublickeys"},(0,a.kt)("inlineCode",{parentName:"h3"},"getPublicKeys")),(0,a.kt)("h4",{id:"parameters-7"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"limit"),": :An optional number of records to return."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"offset"),":An optional number which row to start retrieving from. ")),(0,a.kt)("h4",{id:"returns-7"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string[]"),": the currently selected public keys."),(0,a.kt)("h4",{id:"description-17"},"Description"),(0,a.kt)("p",null,"API returns the public keys managed by the wallet. The wallet can limit the total number of managed public keys to return."),(0,a.kt)("admonition",{title:"EXTENDED IMPLEMENTATION",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This method is not defined in Chia provider API 1.0.0.")),(0,a.kt)("h4",{id:"example-10"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"}," const publicKeys = await window.chia.hoogii.request({\n    method: 'getPublicKeys',\n    params: {},\n})\nconsole.log(publicKeys)\n")),(0,a.kt)("h3",{id:"getassetbalance"},(0,a.kt)("inlineCode",{parentName:"h3"},"getAssetBalance")),(0,a.kt)("h4",{id:"parameters-8"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"type"),": : Asset type, ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"cat"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"did"),", or ",(0,a.kt)("inlineCode",{parentName:"li"},"nft"),". null means XCH."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"assetId"),": It depends on ",(0,a.kt)("inlineCode",{parentName:"li"},"type")," and will be ignored when ",(0,a.kt)("inlineCode",{parentName:"li"},"type")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),".\nIf type is ",(0,a.kt)("inlineCode",{parentName:"li"},"cat"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"assetId")," means tail program hash.\nIf type is ",(0,a.kt)("inlineCode",{parentName:"li"},"did"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"assetId")," means did id.\nIf type is ",(0,a.kt)("inlineCode",{parentName:"li"},"nft"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"assetId")," means nft id.")),(0,a.kt)("h4",{id:"returns-8"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"AssetBalanceResp"),":Returns the spendable balance of the wallet's asset."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"interface AssetBalanceResp {\n  spendableCoinCount: number;\n}\n")),(0,a.kt)("h4",{id:"description-18"},"Description"),(0,a.kt)("p",null,"Returns the spendable balance of the wallet. It's convenient for the dApp to query the user's balance. Also, the dApp can sum the results by calling ",(0,a.kt)("inlineCode",{parentName:"p"},"getAssetCoins"),"."),(0,a.kt)("admonition",{title:"ALTERNATIVE IMPLEMENTATION",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This method is not defined in Chia provider API 1.0.0. We only provide ",(0,a.kt)("inlineCode",{parentName:"p"},"cat")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"xch"))),(0,a.kt)("h4",{id:"example-11"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const balance = await window.chia.hoogii.request({\n    method: 'getAssetBalance',\n    params: { type: 'cat', assetId: '73dd418ff67e6079f06c7cc8cee637c7adc314210dca26997d634692f6c16087' },\n})\nconsole.log('balance', balance.spendableCoinCount)\n")),(0,a.kt)("h3",{id:"filterunlockedcoins"},(0,a.kt)("inlineCode",{parentName:"h3"},"filterUnlockedCoins")),(0,a.kt)("admonition",{title:"NOT IMPLEMENTED",type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"This RPC endpoint is not currently implemented and ",(0,a.kt)("a",{parentName:"p",href:"#underdevelopment"},(0,a.kt)("inlineCode",{parentName:"a"},"UnderDevelopment"))," will be raised.")),(0,a.kt)("h3",{id:"getassetcoins"},(0,a.kt)("inlineCode",{parentName:"h3"},"getAssetCoins")),(0,a.kt)("h4",{id:"parameters-9"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"type"),": Asset type, ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"cat"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"did"),", or ",(0,a.kt)("inlineCode",{parentName:"li"},"nft"),". ",(0,a.kt)("inlineCode",{parentName:"li"},"null")," means ",(0,a.kt)("inlineCode",{parentName:"li"},"XCH"),"  "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"assetId"),": It depends on ",(0,a.kt)("inlineCode",{parentName:"li"},"type")," and will be ignored when ",(0,a.kt)("inlineCode",{parentName:"li"},"type")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),".\nIf type is ",(0,a.kt)("inlineCode",{parentName:"li"},"cat"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"assetId")," means tail program hash.\nIf type is ",(0,a.kt)("inlineCode",{parentName:"li"},"did"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"assetId")," means did id.\nIf type is ",(0,a.kt)("inlineCode",{parentName:"li"},"nft"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"assetId")," means nft id."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"offset"),": specify which row to start retrieving from. The default value is ",(0,a.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"limit"),": specify the number of records to return. The default value is ",(0,a.kt)("inlineCode",{parentName:"li"},"10"),".  ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"interface GetAssetCoinsParams {\n  type?: string;\n  assetId?: string;\n  offset?: number;\n  limit?: number;\n  includedLocked?: boolean;  // always `false`; not specifiable by user \n}\n")),(0,a.kt)("h4",{id:"returns-9"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"AssetCoin[]"),": an list of ",(0,a.kt)("inlineCode",{parentName:"p"},"AssetCoin")," with the following fields:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"coin"),": A Chia coin with fields ",(0,a.kt)("inlineCode",{parentName:"li"},"amount"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"parent_coin_info"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"puzzle_hash"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"coinName"),": The ID of the coin."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"puzzle"),": The puzzle for the coin, which is a computational task that needs to be solved in order to obtain the coin."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"confirmedBlockIndex"),": The index number of the confirmed block in which the coin resides  "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"locked"),": This API only support unlocked coins, this field is always ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),".  "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"lineageProof"),": The lineage proof for the coin, which includes the name of the coin's parent, the hash value of the inner puzzle, and the amount of the coin. This field is optional, as not all coins have a lineage proof.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"interface AssetCoin {\n  coin: Coin;\n  coinName: string;\n  puzzle: string;\n  confirmedBlockIndex: number;\n  locked: boolean;  // always `false`\n  lineageProof?: {\n    parentName?: string;\n    innerPuzzleHash?: string;\n    amount?: number;\n  }\n}\n")),(0,a.kt)("h4",{id:"description-19"},"Description"),(0,a.kt)("p",null,"This is an interface to retrieves information about Chia coins based on certain parameters."),(0,a.kt)("admonition",{title:"ALTERNATIVE IMPLEMENTATION",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This RPC endpoint is implemented differently from the Chia provider API 1.0.0. We only provide unlocked coins.")),(0,a.kt)("h4",{id:"example-12"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const xchCoins = await window.chia.hoogii.request({\n  method: 'getAssetCoins',\n  params: { type: null, assetId: null },\n});\n\nconsole.log('xchCoins', xchCoins);\n\nconst catCoins = await window.chia.hoogii.request({\n  method: 'getAssetCoins',\n  params: {\n    type: 'cat',\n    assetId: '73dd418ff67e6079f06c7cc8cee637c7adc314210dca26997d634692f6c16087',\n  },\n});\n\nconsole.log('assetCoins', assetCoins);\n")),(0,a.kt)("h3",{id:"signcoinspends"},(0,a.kt)("inlineCode",{parentName:"h3"},"signCoinSpends")),(0,a.kt)("h4",{id:"parameters-10"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"coinSpends"),": A list of ",(0,a.kt)("inlineCode",{parentName:"li"},"coinSpend")," with the following fields:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"coin"),": A ",(0,a.kt)("inlineCode",{parentName:"li"},"Coin")," object. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"puzzle_reveal"),": The puzzle of the Coin.   "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"solution"),": the solution of puzzle.   ")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface Coin {\n  amount: number;\n  parent_coin_info: string;\n  puzzle_hash: string;\n}\n\ninterface CoinSpend {\n  coin: Coin;\n  puzzle_reveal: string;\n  solution: string; \n}\n")),(0,a.kt)("h4",{id:"returns-10"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string"),": The aggregated signature for the ",(0,a.kt)("inlineCode",{parentName:"p"},"coinSpends"),"."),(0,a.kt)("h4",{id:"description-20"},"Description"),(0,a.kt)("p",null,"This is a lower-level API that signs custom coin spends and returns the aggregated signature. "),(0,a.kt)("admonition",{title:"ALTERNATIVE IMPLEMENTATION",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This RPC endpoint is implemented differently from the Chia provider API 1.0.0. We do not provide an ",(0,a.kt)("inlineCode",{parentName:"p"},"partialSign")," parameter.")),(0,a.kt)("h4",{id:"example-13"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const aggregated_signature = await window.chia.hoogii.request({\n  method: 'signCoinSpends',\n  params: { coinSpends: ... },\n});\n\nconsole.log(aggregated_signature);\n")),(0,a.kt)("h3",{id:"signmessage"},(0,a.kt)("inlineCode",{parentName:"h3"},"signMessage")),(0,a.kt)("admonition",{title:"NOT IMPLEMENTED",type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"This RPC endpoint is not currently implemented and ",(0,a.kt)("a",{parentName:"p",href:"#underdevelopment"},(0,a.kt)("inlineCode",{parentName:"a"},"UnderDevelopment"))," will be raised.")),(0,a.kt)("h2",{id:"errors"},"Errors"),(0,a.kt)("p",null,"The errors share a common structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"interface Error {\n  code: number;\n  message: string;\n  data?: any;\n}\n")),(0,a.kt)("h3",{id:"invalidparamserror"},(0,a.kt)("inlineCode",{parentName:"h3"},"InvalidParamsError")),(0,a.kt)("h4",{id:"definition-4"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"InvalidParamsError = {\n  code: 4000,\n  message: 'invalid params'\n}\n")),(0,a.kt)("h3",{id:"unauthorizederror"},(0,a.kt)("inlineCode",{parentName:"h3"},"UnauthorizedError")),(0,a.kt)("h4",{id:"definition-5"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"UnauthorizedError = {\n  code: 4001,\n  message: 'unauthorized'\n}\n")),(0,a.kt)("h3",{id:"userrejectedrequesterror"},(0,a.kt)("inlineCode",{parentName:"h3"},"UserRejectedRequestError")),(0,a.kt)("h4",{id:"definition-6"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"UserRejectedRequestError = {\n  code: 4002,\n  message: 'user rejected request'\n}\n")),(0,a.kt)("h3",{id:"spendablebalanceexceedederror"},(0,a.kt)("inlineCode",{parentName:"h3"},"SpendableBalanceExceededError")),(0,a.kt)("h4",{id:"definition-7"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"SpendableBalanceExceededError = {\n  code: 4003,\n  message: 'spendable balance exceeded'\n}\n")),(0,a.kt)("h3",{id:"methodnotfounderror"},(0,a.kt)("inlineCode",{parentName:"h3"},"MethodNotFoundError")),(0,a.kt)("h4",{id:"definition-8"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"MethodNotFoundError = {\n  code: 4004,\n  message: 'method not found'\n}\n")),(0,a.kt)("h3",{id:"nosecretkeyerror"},(0,a.kt)("inlineCode",{parentName:"h3"},"NoSecretKeyError")),(0,a.kt)("h4",{id:"definition-9"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"NoSecretKeyError = {\n  code: 4005,\n  message: 'no secret key for public key'\n}\n")),(0,a.kt)("h3",{id:"limitexceederror"},(0,a.kt)("inlineCode",{parentName:"h3"},"LimitExceedError")),(0,a.kt)("h4",{id:"definition-10"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"LimitExceedError = {\n  code: 4029,\n  message: 'too many requests'\n}\n")),(0,a.kt)("h3",{id:"underdevelopment"},(0,a.kt)("inlineCode",{parentName:"h3"},"UnderDevelopment")),(0,a.kt)("h4",{id:"definition-11"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"UnderDevelopment = {\n  code: 4030,\n  message: 'under development'\n}\n")))}c.isMDXComponent=!0}}]);